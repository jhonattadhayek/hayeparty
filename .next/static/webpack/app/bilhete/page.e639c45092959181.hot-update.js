"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/bilhete/page",{

/***/ "(app-pages-browser)/./lib/qr-tiger.ts":
/*!*************************!*\
  !*** ./lib/qr-tiger.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateQRCode: function() { return /* binding */ generateQRCode; }\n/* harmony export */ });\n/* harmony import */ var qrcode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qrcode */ \"(app-pages-browser)/./node_modules/qrcode/lib/browser.js\");\n\nasync function generateQRCode(url) {\n    try {\n        console.log(\"\\uD83D\\uDD04 Gerando QR Code para:\", url);\n        // Gera QR code como data URL (base64) com configurações melhoradas\n        const qrCodeDataURL = await qrcode__WEBPACK_IMPORTED_MODULE_0__.toDataURL(url, {\n            width: 300,\n            margin: 1,\n            color: {\n                dark: \"#000000\",\n                light: \"#FFFFFF\" // Branco puro\n            },\n            errorCorrectionLevel: \"H\" // Nível mais alto de correção de erro\n        });\n        console.log(\"✅ QR Code gerado com sucesso\");\n        return qrCodeDataURL;\n    } catch (error) {\n        console.error(\"❌ Erro ao gerar QR Code:\", error);\n        // Fallback para API gratuita online se a geração local falhar\n        const fallbackUrl = \"https://api.qrserver.com/v1/create-qr-code/?size=300x300&format=png&ecc=H&margin=1&data=\".concat(encodeURIComponent(url));\n        console.log(\"\\uD83D\\uDD04 Usando fallback online:\", fallbackUrl);\n        return fallbackUrl;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9xci10aWdlci50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQjtBQUVwQixlQUFlQyxlQUFlQyxHQUFXO0lBQzlDLElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDLHNDQUE0QkY7UUFFeEMsbUVBQW1FO1FBQ25FLE1BQU1HLGdCQUFnQixNQUFNTCw2Q0FBZ0IsQ0FBQ0UsS0FBSztZQUNoREssT0FBTztZQUNQQyxRQUFRO1lBQ1JDLE9BQU87Z0JBQ0xDLE1BQU07Z0JBQ05DLE9BQU8sVUFBYSxjQUFjO1lBQ3BDO1lBQ0FDLHNCQUFzQixJQUFJLHNDQUFzQztRQUNsRTtRQUVBVCxRQUFRQyxHQUFHLENBQUM7UUFDWixPQUFPQztJQUVULEVBQUUsT0FBT1EsT0FBTztRQUNkVixRQUFRVSxLQUFLLENBQUMsNEJBQTRCQTtRQUUxQyw4REFBOEQ7UUFDOUQsTUFBTUMsY0FBYywyRkFBbUgsT0FBeEJDLG1CQUFtQmI7UUFDbElDLFFBQVFDLEdBQUcsQ0FBQyx3Q0FBOEJVO1FBQzFDLE9BQU9BO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvcXItdGlnZXIudHM/ZjAyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUVJDb2RlIGZyb20gJ3FyY29kZSdcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlUVJDb2RlKHVybDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+UhCBHZXJhbmRvIFFSIENvZGUgcGFyYTonLCB1cmwpXG4gICAgXG4gICAgLy8gR2VyYSBRUiBjb2RlIGNvbW8gZGF0YSBVUkwgKGJhc2U2NCkgY29tIGNvbmZpZ3VyYcOnw7VlcyBtZWxob3JhZGFzXG4gICAgY29uc3QgcXJDb2RlRGF0YVVSTCA9IGF3YWl0IFFSQ29kZS50b0RhdGFVUkwodXJsLCB7XG4gICAgICB3aWR0aDogMzAwLFxuICAgICAgbWFyZ2luOiAxLFxuICAgICAgY29sb3I6IHtcbiAgICAgICAgZGFyazogJyMwMDAwMDAnLCAgICAvLyBQcmV0byBwdXJvIHBhcmEgbWVsaG9yIGNvbnRyYXN0ZVxuICAgICAgICBsaWdodDogJyNGRkZGRkYnICAgIC8vIEJyYW5jbyBwdXJvXG4gICAgICB9LFxuICAgICAgZXJyb3JDb3JyZWN0aW9uTGV2ZWw6ICdIJyAvLyBOw612ZWwgbWFpcyBhbHRvIGRlIGNvcnJlw6fDo28gZGUgZXJyb1xuICAgIH0pXG4gICAgXG4gICAgY29uc29sZS5sb2coJ+KchSBRUiBDb2RlIGdlcmFkbyBjb20gc3VjZXNzbycpXG4gICAgcmV0dXJuIHFyQ29kZURhdGFVUkxcbiAgICBcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCfinYwgRXJybyBhbyBnZXJhciBRUiBDb2RlOicsIGVycm9yKVxuICAgIFxuICAgIC8vIEZhbGxiYWNrIHBhcmEgQVBJIGdyYXR1aXRhIG9ubGluZSBzZSBhIGdlcmHDp8OjbyBsb2NhbCBmYWxoYXJcbiAgICBjb25zdCBmYWxsYmFja1VybCA9IGBodHRwczovL2FwaS5xcnNlcnZlci5jb20vdjEvY3JlYXRlLXFyLWNvZGUvP3NpemU9MzAweDMwMCZmb3JtYXQ9cG5nJmVjYz1IJm1hcmdpbj0xJmRhdGE9JHtlbmNvZGVVUklDb21wb25lbnQodXJsKX1gXG4gICAgY29uc29sZS5sb2coJ/CflIQgVXNhbmRvIGZhbGxiYWNrIG9ubGluZTonLCBmYWxsYmFja1VybClcbiAgICByZXR1cm4gZmFsbGJhY2tVcmxcbiAgfVxufSAiXSwibmFtZXMiOlsiUVJDb2RlIiwiZ2VuZXJhdGVRUkNvZGUiLCJ1cmwiLCJjb25zb2xlIiwibG9nIiwicXJDb2RlRGF0YVVSTCIsInRvRGF0YVVSTCIsIndpZHRoIiwibWFyZ2luIiwiY29sb3IiLCJkYXJrIiwibGlnaHQiLCJlcnJvckNvcnJlY3Rpb25MZXZlbCIsImVycm9yIiwiZmFsbGJhY2tVcmwiLCJlbmNvZGVVUklDb21wb25lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/qr-tiger.ts\n"));

/***/ })

});